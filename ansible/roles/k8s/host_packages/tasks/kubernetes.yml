---
- name: kubernetes - install utils packages
  ansible.builtin.package:
    name: "{{ kubernetes_utils_packages }}"
    state: present

- name: kubernetes - download binaries
  ansible.builtin.get_url:
    url: "{{ item }}"
    dest: "{{ bin_dir }}"
    mode: 0755
    owner: root
    group: root
  loop: "{{ kubernetes_bins }}"
  notify: kubelet - restart

- name: kubernetes - kubelet - copy systemd service
  ansible.builtin.template:
    src: kubelet.service.j2
    dest: /etc/systemd/system/kubelet.service
    mode: 0644
    owner: root
    group: root
  notify: kubelet - restart

- name: kubernetes - kubelet - create service override directory
  ansible.builtin.file:
    path: /etc/systemd/system/kubelet.service.d
    state: directory
    recurse: true

- name: kubernetes - kubelet - copy service override
  ansible.builtin.template:
    src: 10-kubeadm.conf.j2
    dest: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
    mode: 0644
    owner: root
    group: root
  notify: kubelet - restart

- name: kubernetes - flush handlers
  ansible.builtin.meta: flush_handlers

- name: kubernetes - kubelet - enable and start
  ansible.builtin.service:
    name: kubelet
    enabled: true
    state: started

- name: kubernetes - pull images
  ansible.builtin.command: >
    kubeadm config images pull --kubernetes-version {{ kubernetes_version }}
  register: result
  changed_when:
    - "'Pulled' in result.stdout"
    - kubernetes_version in result.stdout
