---
- name: argocd - root app - check main repo
  ansible.builtin.uri:
    url: "{{ argocd_root_app_repo_url }}"
    timeout: 10
  register: argocd_root_app_check_main_repo
  ignore_errors: true

#- name: argocd - root app - set mirror repo as helm value
#  ansible.builtin.set_fact:
#    argocd_root_app_set_repo: --set repo={{ argocd_root_app_repo_mirror_url }}
#  when: argocd_root_app_check_main_repo.status != 200

- name: argocd - root app - helm template
  ansible.builtin.command: >
    helm template
      {{ argocd_root_app_chart }}
      --name-template root
      --namespace {{ argocd_namespace }}
      --include-crds
      --set externalSecret=false
      {{ argocd_root_app_set_repo | default('', true) }}
  register: argocd_root_app_template_result
  changed_when: false

- name: argocd - root app - apply helm template
  kubernetes.core.k8s:
    namespace: "{{ argocd_namespace }}"
    definition: "{{ argocd_root_app_template_result.stdout }}"
    state: present

- name: argocd - root app - wait for applicationsets
  kubernetes.core.k8s_info:
    api_version: argoproj.io/v1alpha1
    kind: ApplicationSet
    name: "{{ item }}"
    namespace: "{{ argocd_namespace }}"
    wait: true
    wait_condition:
      type: ResourcesUpToDate
      status: "True"
    wait_timeout: 300
  loop: "{{ argocd_root_app_appsets }}"
