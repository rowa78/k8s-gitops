# RKE2 version
rke2_version: v1.29.3+rke2r1

# Deploy the control plane in HA mode
rke2_ha_mode: false

# Install and configure Keepalived on Server nodes
# Can be disabled if you are using pre-configured Load Balancer
rke2_ha_mode_keepalived: false

# Install and configure kube-vip LB and VIP for cluster
# rke2_ha_mode_keepalived needs to be false
rke2_ha_mode_kubevip: true

# Kubernetes API and RKE2 registration IP address. The default Address is the IPv4 of the Server/Master node.
# In HA mode choose a static IP which will be set as VIP in keepalived.
# Or if the keepalived is disabled, use IP address of your LB.
#rke2_api_ip: "{{ hostvars[groups[rke2_servers_group_name].0]['ansible_default_ipv4']['address'] }}"
rke2_api_ip: 10.0.1.2

# optional option for RKE2 Server to listen on a private IP address on port 9345
# rke2_api_private_ip:

# optional option for kubevip IP subnet
# rke2_api_cidr: 24

# optional option for kubevip
# rke2_interface: eno1.4000
# optional option for IPv4/IPv6 addresses to advertise for node
# rke2_bind_address: "{{ hostvars[inventory_hostname]['ansible_' + rke2_interface]['ipv4']['address'] }}"

# optional option for kubevip
#rke2_interface: eth0
# optional option for IPv4/IPv6 addresses to advertise for node
#rke2_bind_address: "10.0.11.2"

# kubevip load balancer IP range
rke2_loadbalancer_ip_range: {}
#  range-global: 192.168.1.50-192.168.1.100
#  cidr-finance: 192.168.0.220/29,192.168.0.230/29

# Install kubevip cloud provider if rke2_ha_mode_kubevip is true
rke2_kubevip_cloud_provider_enable: false

# Enable kube-vip to watch Services of type LoadBalancer
rke2_kubevip_svc_enable: false

rke2_server_options:
  - "cluster-cidr: 10.42.0.0/16,2001:cafe:42::/56"
  - "service-cidr: 10.43.0.0/16,2001:cafe:43::/112"
  - "kube-proxy-arg: ['nodeport-addresses=10.0.1.0/24,fd00::/8']"
  - "kubelet-arg: ['max-pods=250']"

# Do not deploy packaged components and delete any deployed components
# Valid items: rke2-canal, rke2-coredns, rke2-ingress-nginx, rke2-metrics-server
rke2_disable:
  - rke2-ingress-nginx

# Option to disable builtin cloud controller - mostly for onprem
rke2_disable_cloud_controller: false

#rke2_server_node_taints:
#  - 'CriticalAddonsOnly=true:NoExecute'