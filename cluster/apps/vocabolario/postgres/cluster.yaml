apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: vocabolariodb
  annotations:
    k8up.io/backupcommand: sh -c 'pg_dump --clean eve'
    k8up.io/file-extension: .sql
    tailscale.com/expose: "true"
spec:
  imageName: r0wa/postgresql:15.4-14
  instances: 3

  affinity:
    additionalPodAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
              - key: cnpg.io/cluster
                operator: In
                values:
                  - vocabolariodb
          topologyKey: kubernetes.io/hostname  # Sicherstellen, dass die Pods auf unterschiedlichen Nodes laufen
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: cnpg.io/cluster
                  operator: In
                  values:
                    - vocabolariodb
            topologyKey: topology.kubernetes.io/zone   # Bevorzugte Zonenverteilung


  resources:
    requests:
      memory: "6Gi"
      cpu: "2"
    limits:
      memory: "6Gi"
      cpu: "6"
  bootstrap:
    initdb:
      database: vocabolariodb
      owner: vocabolario 

  postgresql:
    parameters:        
      pg_stat_statements.max: "10000"
      pg_stat_statements.track: all
      hypopg.use_real_oids: 'true'
     
  replicationSlots:
    highAvailability:
      enabled: true

  monitoring:
    enablePodMonitor: true

  enableSuperuserAccess: true

  storage:
    size: 20Gi
    storageClass: longhorn-local-db

  backup:
    barmanObjectStore:
      endpointURL: "https://fsn1.your-objectstorage.com"      
      destinationPath: "s3://rwcloud-postgres/"         
      s3Credentials:
        accessKeyId:
          name: s3-creds
          key: aws_access_key_id
        secretAccessKey:
          name: s3-creds
          key: aws_secret_access_key
      wal:
        compression: bzip2        
      data:
        compression: bzip2                
        jobs: 1
    retentionPolicy: "5d"
---
apiVersion: postgresql.cnpg.io/v1
kind: ScheduledBackup
metadata:
  name: vocabolariodb-backup
spec:
  schedule: "0 0 0 * * *"
  backupOwnerReference: self
  cluster:
    name: vocabolariodb