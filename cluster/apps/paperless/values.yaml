paperless:
  #
  # IMPORTANT NOTE
  #
  # This chart inherits from our common library chart. You can check the default values/options here:
  # https://github.com/k8s-at-home/library-charts/tree/main/charts/stable/common/values.yaml
  #

  image:
    # -- image repository
    repository: ghcr.io/paperless-ngx/paperless-ngx
    # -- image pull policy
    pullPolicy: IfNotPresent
    # -- image tag
    # @default -- chart.appVersion
    tag: "1.9.2"

  # -- See the following files for additional environment variables:
  # https://github.com/paperless-ngx/paperless-ngx/tree/main/docker/compose/
  # https://github.com/paperless-ngx/paperless-ngx/blob/main/paperless.conf.example
  # @default -- See below
  env:
    # -- Project name
    COMPOSE_PROJECT_NAME: paperless
    # -- Redis to use
    PAPERLESS_REDIS: redis://paperless-redis-master:6379
    # -- OCR languages to install
    PAPERLESS_OCR_LANGUAGE: deu
    # USERMAP_UID: 1000
    # USERMAP_GID: 1000
    # PAPERLESS_TIME_ZONE: Europe/London
    # -- Database host to use
    PAPERLESS_DBHOST:
    # -- Port to use
    PAPERLESS_PORT: 8000
    # -- Username for the root user
    # PAPERLESS_ADMIN_USER: admin
    # -- Password for the root user
    # PAPERLESS_ADMIN_PASSWORD: admin
    # PAPERLESS_URL: <set to main ingress by default>
    PAPERLESS_ADMIN_USER:
      valueFrom:
        secretKeyRef:
          name: paperless
          key: USER
    PAPERLESS_ADMIN_PASSWORD:
      valueFrom:
        secretKeyRef:
          name: paperless
          key: PASSWORD
    PAPERLESS_ADMIN_MAIL:
      valueFrom:
        secretKeyRef:
          name: paperless
          key: EMAIL

  # -- Configures service settings for the chart.
  # @default -- See values.yaml
  service:
    main:
      ports:
        http:
          port: 8000

  ingress:
    # -- Enable and configure ingress settings for the chart under this key.
    # @default -- See values.yaml
    main:
      enabled: true
      ingressClassName: "nginx"
      annotations:       
        cert-manager.io/cluster-issuer: letsencrypt-production    
        nginx.ingress.kubernetes.io/auth-method: GET
        nginx.ingress.kubernetes.io/auth-url: http://authelia.authelia.svc.cluster.local/api/verify
        nginx.ingress.kubernetes.io/auth-signin: https://auth.rwcloud.org?rm=$request_method
        nginx.ingress.kubernetes.io/auth-response-headers: Remote-User,Remote-Name,Remote-Groups,Remote-Email
        nginx.ingress.kubernetes.io/auth-snippet: |
          proxy_set_header X-Forwarded-Method $request_method;
        hajimari.io/enable: "true"
        hajimari.io/icon: "note-multiple"
        hajimari.io/group: apps
      hosts:
        - host: "dms.rwcloud.org"
          paths:
            - path: /
              pathType: Prefix
      tls:
        - hosts:
            - "dms.rwcloud.org"

  persistence:
    # -- Configure persistence for data.
    # @default -- See values.yaml
    data:
      enabled: true
      mountPath: /usr/src/paperless/data
      accessMode: ReadWriteOnce
      storageClass: "nfs-client"
      size: 10Gi
      emptyDir:
        enabled: false
    # -- Configure persistence for media.
    # @default -- See values.yaml
    media:
      enabled: true
      mountPath: /usr/src/paperless/media
      accessMode: ReadWriteOnce
      storageClass: "nfs-client"
      size: 100Gi
      emptyDir:
        enabled: false
    # -- Configure volume to monitor for new documents.
    # @default -- See values.yaml
    consume:
      enabled: true
      mountPath: /usr/src/paperless/consume
      accessMode: ReadWriteOnce
      storageClass: "nfs-client"
      size: 10Gi
      emptyDir:
        enabled: false
    # -- Configure export volume.
    # @default -- See values.yaml
    export:
      enabled: true
      mountPath: /usr/src/paperless/export
      accessMode: ReadWriteOnce
      storageClass: "nfs-client"
      size: 50Gi
      emptyDir:
        enabled: false

  # -- Enable and configure postgresql database subchart under this key.
  #    For more options see [postgresql chart documentation](https://github.com/bitnami/charts/tree/master/bitnami/postgresql)
  # @default -- See values.yaml
  postgresql:
    enabled: false
    postgresqlUsername: paperless
    postgresqlPassword: paperless
    postgresqlDatabase: paperless
    persistence:
      enabled: false
      # storageClass: ""

  # -- Enable and configure redis subchart under this key.
  #    For more options see [redis chart documentation](https://github.com/bitnami/charts/tree/master/bitnami/redis)
  # @default -- See values.yaml
  redis:
    enabled: true
    auth:
      enabled: false
    architecture: standalone
    master:
      persistence:
        ## @param master.persistence.enabled Enable persistence on Redis&reg; master nodes using Persistent Volume Claims
        ##
        enabled: true
        storageClass: "openebs-hostpath"
        ## @param master.persistence.accessModes Persistent Volume access modes
        ##
        accessModes:
          - ReadWriteOnce
        ## @param master.persistence.size Persistent Volume size
        ##
        size: 8Gi
      nodeSelector:
        obenebs.storage.node: "true"
    