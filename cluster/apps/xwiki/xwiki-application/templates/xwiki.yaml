{{- $fullName := include "xwiki.fullname" . -}}
{{- if .Values.workloadStateful }}
apiVersion: {{ include "common.capabilities.statefulset.apiVersion" . }}
kind: StatefulSet
{{- else }}
apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
{{- end }}
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "xwiki.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.cluster.replicas }}
  {{- if .Values.workloadStateful }}
  serviceName: {{ $fullName }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "xwiki.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        # Annotations to rollout changes on configs on workload
        checksum/configmap: {{ include (print $.Template.BasePath "/configmaps.yaml") . | sha256sum }}
        checksum/initialization-configmaps: {{ include (print $.Template.BasePath "/initialization-configmaps.yaml") . | sha256sum }}
      labels:
        {{- include "xwiki.labels" . | nindent 8 }}
    spec:
      {{- if (.Values.cluster.enabled) }}
      serviceAccountName: {{ $fullName }}-sa
      {{- end }}
      initContainers:
        {{- if and .Values.volumePermissions.enabled .Values.persistence.enabled }}
        - name: xwiki-data-permissions
          image: {{ include "xwiki.imageName" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /bin/sh
            - -ec
            - |
              chown -R "{{ .Values.containerSecurityContext.runAsUser }}:{{ .Values.securityContext.fsGroup }}" /usr/local/xwiki/data
          securityContext:
            runAsUser: 0
          volumeMounts:
            - name: xwiki-data
              mountPath: /usr/local/xwiki/data
        {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: {{ include "xwiki.imageName" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: ["/bin/bash", "/configmaps/entrypoint"]
        {{- if .Values.containerSecurityContext.enabled }}
        securityContext: {{- omit .Values.containerSecurityContext "enabled" | toYaml | nindent 12 }}
        {{- end }}
        ports:
        - containerPort: {{ .Values.service.internalPort }}
        {{- if (.Values.cluster.enabled) }}
        - containerPort: {{ .Values.cluster.jgroups.port }}
        {{- end }}
        env:
        {{- if .Values.javaOpts }}
        - name: JAVA_OPTS
          value: {{ .Values.javaOpts | join " " | quote }}
        {{- end }}
        {{- range .Values.extraEnvVars }}
        - name: {{ .name  }}
          value: {{ .value | quote }}
        {{- end }}
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
        {{- if .Values.mysql.enabled }}
              name: "{{ .Release.Name }}-mysql"
              key: mysql-password
        {{- else if .Values.postgresql.enabled }}
              name: "{{ .Release.Name }}-postgresql"
              key: password
        {{- else if .Values.externalDB.existingSecret }}
              name: "{{ .Values.externalDB.existingSecret }}"
              key: password
        {{- else }}
              name: {{ .Release.Name | quote }}
              key: DB_PASSWORD
        {{- end }}
        {{- if .Values.solr.enabled }}
        - name: SOLR_BASEURL
          valueFrom:
            configMapKeyRef:
              name: {{ $fullName }}
              key: SOLR_BASEURL
        {{- end }}
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: {{ $fullName }}
              key: DB_HOST
        - name: DB_USER
          valueFrom:
            configMapKeyRef:
              name: {{ $fullName }}
              key: DB_USER
        - name: DB_DATABASE
          valueFrom:
            configMapKeyRef:
              name: {{ $fullName }}
              key: DB_DATABASE
        resources:
{{ toYaml .Values.resources | indent 12 }}
        volumeMounts:
        - name: xwiki-data
          mountPath: /usr/local/xwiki/data
        - name: configmaps
          mountPath: /configmaps
    {{- if .Values.securityContext.enabled }}
      securityContext: {{- omit .Values.securityContext "enabled" | toYaml | nindent 8 }}
    {{- end }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
      - name: configmaps
        configMap:
          name: {{ include "xwiki.initScripts" . }}
      - name: xwiki-data
  {{- if and .Values.persistence.enabled .Values.persistence.existingClaim }}
        persistentVolumeClaim:
          claimName: {{ tpl .Values.persistence.existingClaim $ }}
  {{- else if not .Values.persistence.enabled }}
        emptyDir: {}
  {{- else if and .Values.workloadStateful (not .Values.cluster.enabled) }}
  volumeClaimTemplates:
    - metadata:
        name: xwiki-data
        {{- if .Values.persistence.annotations }}
        annotations: {{- include "common.tplvalues.render" (dict "value" .Values.persistence.annotations "context" $) | nindent 10 }}
        {{- end }}
        {{- if .Values.persistence.labels }}
        labels: {{- include "common.tplvalues.render" (dict "value" .Values.persistence.labels "context" $) | nindent 10 }}
        {{- end }}
      spec:
        accessModes:
        {{- range .Values.persistence.accessModes }}
          - {{ . | quote }}
        {{- end }}
        {{- if .Values.persistence.dataSource }}
        dataSource: {{- include "common.tplvalues.render" (dict "value" .Values.persistence.dataSource "context" $) | nindent 10 }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
        {{- if .Values.persistence.selector }}
        selector: {{- include "common.tplvalues.render" (dict "value" .Values.persistence.selector "context" $) | nindent 10 }}
        {{- end }}
        {{- include "common.storage.class" (dict "persistence" .Values.persistence "global" .Values.global) | nindent 8 }}
  {{- else }}
        persistentVolumeClaim:
          claimName: xwiki
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: xwiki
  annotations:
    helm.sh/resource-policy: keep
spec:
  accessModes:
    {{- range .Values.persistence.accessModes }}
      - {{ . | quote }}
    {{- end }}
  resources:
    requests:
      storage: {{ .Values.persistence.size | quote }}
  {{- if .Values.persistence.storageClass }}
  storageClassName: {{ .Values.persistence.storageClass | quote }}
  {{- end }}
  {{- end }}