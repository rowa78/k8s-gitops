apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "dovecot.fullname" . }}
  labels:
    {{- include "dovecot.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "dovecot.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "dovecot.selectorLabels" . | nindent 8 }}
    spec:
      dnsPolicy: "None"
      dnsConfig:
        nameservers:
        - "10.43.0.11"
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "dovecot.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: imaps
              containerPort: 993
              protocol: TCP
            - name: lmtp
              containerPort: 24
              protocol: TCP
            - name: auth
              containerPort: 10025
              protocol: TCP
          env:
          - name: DB_HOST
            valueFrom:
              secretKeyRef:
                name: {{ .Values.database.secretName }}
                key: host
          - name: DB_USER
            valueFrom:
              secretKeyRef:
                name: {{ .Values.database.secretName }}
                key: user
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.database.secretName }}
                key: password
          - name: DB_NAME
            valueFrom:
              secretKeyRef:
                name: {{ .Values.database.secretName }}
                key: dbname
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: vmail
              mountPath: /vmail
            - name: certificates
              mountPath: /certs
            - name: dovecot-config-main
              mountPath: /etc/dovecot/dovecot.conf
              subPath: dovecot.conf
            - name: dovecot-config-sql
              mountPath: /etc/dovecot/dovecot-sql.conf.ext
              subPath: dovecot-sql.conf.ext
            - name: dovecot-config-additional
              mountPath: /etc/dovecot/conf.d/
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: vmail
          persistentVolumeClaim:
            claimName: {{ include "dovecot.fullname" . }}-vmail
        - name: certificates
          secret:
            secretName: {{ .Values.certificates.secretName }}
        - name: dovecot-config-main
          configMap:
            name: {{ include "dovecot.fullname" . }}-main
        - name: dovecot-config-additional
          configMap:
            name: {{ include "dovecot.fullname" . }}-additional
        - name: dovecot-config-sql
          configMap:
            name: {{ include "dovecot.fullname" . }}-sql
