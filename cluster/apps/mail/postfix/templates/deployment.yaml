apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "postfix.fullname" . }}
  labels:
    {{- include "postfix.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "postfix.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "postfix.selectorLabels" . | nindent 8 }}
      annotations:
        {{- if .Files.Glob "files/*" }}
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- end }}
    spec:
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.securityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.initContainers.fixPermissions.enabled }}
      initContainers:
        - name: fix-permissions
          image: {{ .Values.initContainers.fixPermissions.image }}:{{ .Values.initContainers.fixPermissions.tag }}
          command:
            {{- toYaml .Values.initContainers.fixPermissions.command | nindent 12 }}
          securityContext:
            runAsUser: 0
            runAsGroup: 0
          volumeMounts:
            - name: postfix-data
              mountPath: /var/lib/postfix
            - name: postfix-spool
              mountPath: /var/spool/postfix
            {{- if .Files.Glob "files/*" }}
            - name: postfix-custom-config
              mountPath: /etc/postfix/custom
            {{- end }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          dnsPolicy: "None"
          dnsConfig:
            nameservers:
            - "10.43.0.11"
            searches:
            - "mail.svc.cluster.local"
            - "svc.cluster.local" 
            - "cluster.local"
          ports:
            - name: smtp
              containerPort: 25
              protocol: TCP
          env:
          - name: DB_HOST
            valueFrom:
              secretKeyRef:
                name: {{ .Values.database.secretName }}
                key: host
          - name: DB_USER
            valueFrom:
              secretKeyRef:
                name: {{ .Values.database.secretName }}
                key: user
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.database.secretName }}
                key: password
          - name: DB_NAME
            valueFrom:
              secretKeyRef:
                name: {{ .Values.database.secretName }}
                key: dbname
          volumeMounts:
            - name: postfix-data
              mountPath: /var/lib/postfix
            - name: postfix-spool
              mountPath: /var/spool/postfix
            {{- if or .Values.certificates.createSecret .Values.certificates.secretName }}
            - name: postfix-certs
              mountPath: /certs
              readOnly: true
            {{- end }}
            {{- if .Files.Glob "files/*" }}
            - name: postfix-custom-config
              mountPath: /custom-config
              readOnly: true
            {{- end }}
            {{- if .Values.additionalSecrets.createSecret }}
            - name: postfix-additional-secrets
              mountPath: /custom-config
              readOnly: true
            {{- end }}
            {{- range .Values.additionalSecrets.existingSecrets }}
            - name: postfix-existing-secret-{{ .name | replace "." "-" }}
              mountPath: /custom-config/{{ .name | replace "." "-" }}
              readOnly: true
            {{- end }}
          {{- if .Values.probes.readiness.enabled }}
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -c
              - "postfix status"
            initialDelaySeconds: {{ .Values.probes.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.readiness.periodSeconds }}
            timeoutSeconds: {{ .Values.probes.readiness.timeoutSeconds }}
            successThreshold: {{ .Values.probes.readiness.successThreshold }}
            failureThreshold: {{ .Values.probes.readiness.failureThreshold }}
          {{- end }}
          {{- if .Values.probes.liveness.enabled }}
          livenessProbe:
            exec:
              command:
              - /bin/sh
              - -c
              - "postfix status"
            initialDelaySeconds: {{ .Values.probes.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.liveness.periodSeconds }}
            timeoutSeconds: {{ .Values.probes.liveness.timeoutSeconds }}
            successThreshold: {{ .Values.probes.liveness.successThreshold }}
            failureThreshold: {{ .Values.probes.liveness.failureThreshold }}
          {{- end }}
          {{- if .Values.probes.startup.enabled }}
          startupProbe:
            exec:
              command:
              - /bin/sh
              - -c
              - "postfix status"
            initialDelaySeconds: {{ .Values.probes.startup.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.startup.periodSeconds }}
            timeoutSeconds: {{ .Values.probes.startup.timeoutSeconds }}
            successThreshold: {{ .Values.probes.startup.successThreshold }}
            failureThreshold: {{ .Values.probes.startup.failureThreshold }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: postfix-data
          persistentVolumeClaim:
            claimName: {{ include "postfix.fullname" . }}-data
        - name: postfix-spool
          persistentVolumeClaim:
            claimName: {{ include "postfix.fullname" . }}-spool
        {{- if or .Values.certificates.createSecret .Values.certificates.secretName }}
        - name: postfix-certs
          secret:
            secretName: {{ if .Values.certificates.secretName }}{{ .Values.certificates.secretName }}{{ else }}{{ include "postfix.fullname" . }}-certs{{ end }}
        {{- end }}
        {{- if .Files.Glob "files/*" }}
        - name: postfix-custom-config
          configMap:
            name: {{ include "postfix.fullname" . }}-config
        {{- end }}
        {{- if .Values.additionalSecrets.createSecret }}
        - name: postfix-additional-secrets
          secret:
            secretName: {{ include "postfix.fullname" . }}-additional
        {{- end }}
        {{- range .Values.additionalSecrets.existingSecrets }}
        - name: postfix-existing-secret-{{ .name | replace "." "-" }}
          secret:
            secretName: {{ .name }}
            {{- if .items }}
            items:
              {{- range .items }}
              - key: {{ .key }}
                path: {{ .path }}
              {{- end }}
            {{- end }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
