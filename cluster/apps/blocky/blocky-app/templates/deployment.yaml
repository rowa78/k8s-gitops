apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "blocky.fullname" . }}
  labels:
    {{- include "blocky.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "blocky.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "blocky.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "blocky.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          command: ["/app/blocky", "--config", "/app/config"]
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/bin/sh", "-c"]
          args:
          - |
            echo "queryLog:              
              target: postgresql://$DB_USER:$DB_PASSWORD@blockydb-rw:5432/blockydb" > /app/config/config-database.yaml && /app/blocky --config /app/config
          env:
          - name: DB_USER
            valueFrom:
              secretKeyRef:
                name: blockydb-secret
                key: username
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: blockydb-secret
                key: password
          ports:
            - name: http
              containerPort: 4000
              protocol: TCP
            - name: dns-tcp
              containerPort: 53
              protocol: TCP
            - name: dns-udp
              containerPort: 53
              protocol: UDP
          livenessProbe:
            exec:
              command:
              - /app/blocky
              - healthcheck
          readinessProbe:
            exec:
              command:
              - /app/blocky
              - healthcheck
          startupProbe:
            exec:
              command:
              - /app/blocky
              - healthcheck
            failureThreshold: 30
            periodSeconds: 10
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - name: config-volume
            mountPath: /app/config/config.yaml
            subPath: config.yaml
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: config-volume
          configMap:
            name: {{ include "blocky.fullname" . }}-config
