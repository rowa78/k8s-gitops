---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deluge
  labels:
    app.kubernetes.io/name: deluge
spec:
  replicas: 1
  revisionHistoryLimit: 3
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: deluge
  template:
    metadata:
      labels:
        app.kubernetes.io/name: deluge
    spec:
      nodeSelector:
        devmem.ru/pve-host: spsrv
      containers:
        - name: deluge
          image: binhex/arch-delugevpn:2.1.1-1-02
          imagePullPolicy: IfNotPresent
          envFrom:
            - secretRef:
                name: deluge
          ports:
            - name: http
              containerPort: 8112
              protocol: TCP
            - name: daemon
              containerPort: 58846
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: http
          startupProbe:
            tcpSocket:
              port: http
            failureThreshold: 10
            periodSeconds: 10
          volumeMounts:
            - name: config
              mountPath: /config
            - name: nfs-downloads
              mountPath: /downloads
          resources:
            requests:
              memory: 1280Mi
              cpu: 300m
            limits:
              memory: 1536Mi
              cpu: 1100m
          securityContext:
            privileged: true
          lifecycle:
            postStart:
              exec:
                command:
                  - "/bin/bash"
                  - "-c"
                  - |
                    sleep 30
                    iptables -A INPUT -s 10.244.0.0/16 -i eth0 -p tcp -m tcp --dport 58846 -j ACCEPT
                    iptables -A OUTPUT -d 10.244.0.0/16 -o eth0 -p tcp -m tcp --sport 58846 -j ACCEPT
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: deluge-config
        - name: nfs-downloads
          persistentVolumeClaim:
            claimName: nfs-downloads-pvc
      securityContext:
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
        sysctls:
          - name: net.ipv4.conf.all.src_valid_mark
            value: "1"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: deluge-config
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  storageClassName: longhorn
---
apiVersion: v1
kind: Service
metadata:
  name: deluge
  labels:
    app.kubernetes.io/name: deluge
spec:
  type: ClusterIP
  ports:
    - port: 8112
      targetPort: http
      protocol: TCP
      name: http
    - port: 58846
      targetPort: daemon
      protocol: TCP
      name: daemon
  selector:
    app.kubernetes.io/name: deluge
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: deluge
  labels:
    app.kubernetes.io/name: deluge
  annotations:
    kubernetes.io/tls-acme: "true"
spec:
  ingressClassName: nginx
  rules:
    - host: &host deluge.home.devmem.ru
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: deluge
                port:
                  number: 8112
  tls:
    - hosts:
        - *host
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: deluge
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: vault-backend
  target:
    template:
      data:
        VPN_ENABLED: "yes"
        VPN_USER: "{{ .vpnUser }}"
        VPN_PASS: "{{ .vpnPass }}"
        VPN_PROV: pia
        VPN_CLIENT: wireguard
        STRICT_PORT_FORWARD: "yes"
        ENABLE_PRIVOXY: "no"
        LAN_NETWORK: 10.244.0.0/16,192.168.0.0/16
        NAME_SERVERS: 84.200.69.80,37.235.1.174,1.1.1.1,37.235.1.177,84.200.70.40,1.0.0.1
        DELUGE_DAEMON_LOG_LEVEL: info
        DELUGE_WEB_LOG_LEVEL: info
        DEBUG: "false"
        UMASK: "022"
        PUID: "1000"
        PGID: "1000"
  data:
    - secretKey: vpnUser
      remoteRef:
        key: secret/deluge
        property: vpn-user
    - secretKey: vpnPass
      remoteRef:
        key: secret/deluge
        property: vpn-pass
