grafana:
  fullnameOverride: grafana
  defaultDashboardsTimezone: Europe/Berlin
  replicas: 2
  persistence:
    enabled: true
    type: sts
    storageClassName: openebs-zfs
    size: 1Gi
  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-production
      nginx.ingress.kubernetes.io/affinity: "cookie"
      gethomepage.dev/enabled: "true"
      gethomepage.dev/description: Grafana
      gethomepage.dev/group: System
      gethomepage.dev/icon: grafana.png
      gethomepage.dev/name: Grafana
      gethomepage.dev/pod-selector: ""
    hosts:
      - &host grafana.rwcloud.org
    tls:
      - hosts:
          - *host
        secretName: grafana-tls
  sidecar:
    datasources:
      enabled: true
      searchNamespace: ALL
    dashboards:
      enabled: true
      searchNamespace: ALL
      folderAnnotation: grafana_folder
      provider:
        foldersFromFilesStructure: true
        disableDeletion: true
        allowUiUpdates: true
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
        - name: "default"
          orgId: 1
          folder: ""
          type: file
          disableDeletion: true
          allowUiUpdates: true
          options:
            path: /var/lib/grafana/dashboards/default
  dashboards:
    default:
      openebs-zfs:
        url: https://grafana.com/api/dashboards/13032/revisions/6/download
        datasource: Prometheus
      node-exporter-full:
        url: https://grafana.com/api/dashboards/1860/revisions/22/download
        datasource: Prometheus
      ingress-nginx:
        url: https://grafana.com/api/dashboards/9614/revisions/1/download
        datasource: Prometheus
      ingress-nginx-nextgen:
        url: https://grafana.com/api/dashboards/14314/revisions/2/download
        datasource: Prometheus
      ingress-nginx-loki:
        url: https://grafana.com/api/dashboards/12559/revisions/11/download
      argocd:
        url: https://raw.githubusercontent.com/argoproj/argo-cd/master/examples/dashboard.json
      thanos:
        url: https://grafana.com/api/dashboards/12937/revisions/4/download
      rabbitmq:
        url: https://grafana.com/api/dashboards/10991/revisions/12/download
#        cloudnative-pg:
#          url: https://raw.githubusercontent.com/cloudnative-pg/cloudnative-pg/main/docs/src/samples/monitoring/grafana-dashboard.json
#        proxmox:
#          url: https://grafana.com/api/dashboards/10347/revisions/3/download
#          datasource: Prometheus
  grafana.ini:
    analytics:
      check_for_updates: false
    server:
      root_url: https://grafana.rwcloud.org
      enable_gzip: true
    auth.ldap:
      enabled: true
      allow_sign_up: true
      config_file: /etc/grafana/ldap.toml
    admin:
      existingSecret: grafana-admin
    auth.generic_oauth:
      enabled: true
      allow_sign_up: true
      auto_login: true
      name: authelia
#        comes from secret; see envFromSecret
#        client_id: 
#        client_secret: 
      scopes: openid profile email groups
      auth_url: https://auth.rwcloud.org/api/oidc/authorization
      token_url: https://auth.rwcloud.org/api/oidc/token
      api_url: https://auth.rwcloud.org/api/oidc/userinfo
      use_pkce: true
      use_refresh_token: true
          # Optionally map user groups to Grafana roles
      role_attribute_path: "contains(groups[*], 'Grafana Admins') && 'Admin' || contains(groups[*], 'Grafana Editors') && 'Editor' || 'Viewer'"
  ldap:
    enabled: false      
  envFromSecret: grafana-vault-secrets 