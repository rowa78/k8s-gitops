apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: authentik
spec:
  instances: 2

  affinity:
    additionalPodAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
              - key: cnpg.io/cluster
                operator: In
                values:
                  - authentik
          topologyKey: kubernetes.io/hostname  # Sicherstellen, dass die Pods auf unterschiedlichen Nodes laufen
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: cnpg.io/cluster
                  operator: In
                  values:
                    - authentik
            topologyKey: topology.kubernetes.io/zone   # Bevorzugte Zonenverteilung

  bootstrap:
    initdb:
      database: authentik
      owner: authentik 

#  postgresql:
#    parameters:
      
  replicationSlots:
    highAvailability:
      enabled: true
      
  monitoring:
    enablePodMonitor: true

  storage:
    size: 10Gi
    storageClass: longhorn-local-db

  backup:
    barmanObjectStore:
      endpointURL: "https://fsn1.your-objectstorage.com"      
      destinationPath: "s3://rwcloud-postgres/"      
      s3Credentials:
        accessKeyId:
          name: s3-creds
          key: aws_access_key_id
        secretAccessKey:
          name: s3-creds
          key: aws_secret_access_key
      wal:
        compression: bzip2        
      data:
        compression: bzip2
        jobs: 1
    retentionPolicy: "14d"

---
apiVersion: postgresql.cnpg.io/v1
kind: ScheduledBackup
metadata:
  name: sched-backup-authentik
spec:
  schedule: "0 0 0 * * *"
  backupOwnerReference: self
  cluster:
    name: authentik