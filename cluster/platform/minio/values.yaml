minio:
  mode: standalone
  ## MinIO&reg; authentication parameters
  ##
  auth:
    ## @param auth.rootUser MinIO&reg; root username
    ##
    rootUser: admin
    ## @param auth.rootPassword Password for MinIO&reg; root user
    ##
    rootPassword: ""
    ## @param auth.existingSecret Use existing secret for credentials details (`auth.rootUser` and `auth.rootPassword` will be ignored and picked up from this secret).
    ##
    existingSecret: "minio-root-user"
    ## @param auth.rootUserSecretKey Key where the MINIO_ROOT_USER username is being stored inside the existing secret `auth.existingSecret`
    ##
    rootUserSecretKey: "rootUser"
    ## @param auth.rootPasswordSecretKey Key where the MINIO_ROOT_USER password is being stored inside the existing secret `auth.existingSecret`
    ##
    rootPasswordSecretKey: "rootPassword"
    ## @param auth.forcePassword Force users to specify required passwords
    ##
    forcePassword: false
    ## @param auth.useCredentialsFiles Mount credentials as a files instead of using an environment variable
    ##
    useCredentialsFiles: false
    ## @param auth.forceNewKeys Force root credentials (user and password) to be reconfigured every time they change in the secrets
    ##
    forceNewKeys: false
  ## @param defaultBuckets Comma, semi-colon or space separated list of buckets to create at initialization (only in standalone mode)
  ## e.g:
  ## defaultBuckets: "my-bucket, my-second-bucket"
  ##
  defaultBuckets: "rwcloud-postgresql"

  ##
  provisioning:
    ## @param provisioning.enabled Enable MinIO&reg; provisioning Job
    ##
    enabled: false
    usersExistingSecrets: []

  ingress:
    ## @param ingress.enabled Enable ingress controller resource for MinIO Console
    ##
    enabled: true
    ## @param ingress.apiVersion Force Ingress API version (automatically detected if not set)
    ##
    apiVersion: ""
    ## @param ingress.ingressClassName IngressClass that will be be used to implement the Ingress (Kubernetes 1.18+)
    ## This is supported in Kubernetes 1.18+ and required if you have more than one IngressClass marked as the default for your cluster.
    ## ref: https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/
    ##
    ingressClassName: "nginx"
    ## @param ingress.hostname Default host for the ingress resource
    ##
    hostname: minio-console.rwcloud.org
    ## @param ingress.path The Path to MinIO&reg;. You may need to set this to '/*' in order to use this with ALB ingress controllers.
    ##
    path: /
    ## @param ingress.pathType Ingress path type
    ##
    pathType: ImplementationSpecific
    ## @param ingress.servicePort Service port to be used
    ## Default is http. Alternative is https.
    ##
    servicePort: minio-console
    ## @param ingress.annotations Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.
    ## For a full list of possible ingress annotations, please see
    ## ref: https://github.com/kubernetes/ingress-nginx/blob/main/docs/user-guide/nginx-configuration/annotations.md
    ## Use this parameter to set the required annotations for cert-manager, see
    ## ref: https://cert-manager.io/docs/usage/ingress/#supported-annotations
    ##
    ## e.g:
    ## annotations:
    ##   kubernetes.io/ingress.class: nginx
    ##   cert-manager.io/cluster-issuer: cluster-issuer-name
    ##
    annotations: {}
    ## @param ingress.tls Enable TLS configuration for the hostname defined at `ingress.hostname` parameter
    ## TLS certificates will be retrieved from a TLS secret with name: `{{- printf "%s-tls" .Values.ingress.hostname }}`
    ## You can:
    ##   - Use the `ingress.secrets` parameter to create this TLS secret
    ##   - Rely on cert-manager to create it by setting the corresponding annotations
    ##   - Rely on Helm to create self-signed certificates by setting `ingress.selfSigned=true`
    ##
    tls: false
    ## @param ingress.selfSigned Create a TLS secret for this ingress record using self-signed certificates generated by Helm
    ##
    selfSigned: false
    ## @param ingress.extraHosts The list of additional hostnames to be covered with this ingress record.
    ## Most likely the hostname above will be enough, but in the event more hosts are needed, this is an array
    ## e.g:
    ## extraHosts:
    ##   - name: minio.local
    ##     path: /
    ##
    extraHosts: []
    ## @param ingress.extraPaths Any additional paths that may need to be added to the ingress under the main host
    ## For example: The ALB ingress controller requires a special rule for handling SSL redirection.
    ## extraPaths:
    ## - path: /*
    ##   backend:
    ##     serviceName: ssl-redirect
    ##     servicePort: use-annotation
    ##
    extraPaths: []
    ## @param ingress.extraTls The tls configuration for additional hostnames to be covered with this ingress record.
    ## see: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
    ## e.g:
    ## extraTls:
    ## - hosts:
    ##     - minio.local
    ##   secretName: minio.local-tls
    ##
    extraTls: []
    ## @param ingress.secrets If you're providing your own certificates, please use this to add the certificates as secrets
    ## key and certificate are expected in PEM format
    ## name should line up with a secretName set further up
    ##
    ## If it is not set and you're using cert-manager, this is unneeded, as it will create a secret for you with valid certificates
    ## If it is not set and you're NOT using cert-manager either, self-signed certificates will be created valid for 365 days
    ## It is also possible to create and manage the certificates outside of this helm chart
    ## Please see README.md for more information
    ##
    ## Example
    ## secrets:
    ##   - name: minio.local-tls
    ##     key: ""
    ##     certificate: ""
    ##
    secrets: []
    ## @param ingress.extraRules Additional rules to be covered with this ingress record
    ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-rules
    ## e.g:
    ## extraRules:
    ## - host: example.local
    ##     http:
    ##       path: /
    ##       backend:
    ##         service:
    ##           name: example-svc
    ##           port:
    ##             name: http
    ##
    extraRules: []
  ## Configure the ingress resource that allows you to access the
  ## MinIO&reg; API. Set up the URL
  ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/
  ##
  apiIngress:
    ## @param apiIngress.enabled Enable ingress controller resource for MinIO API
    ##
    enabled: false
    ## @param apiIngress.apiVersion Force Ingress API version (automatically detected if not set)
    ##
    apiVersion: ""
    ## @param apiIngress.ingressClassName IngressClass that will be be used to implement the Ingress (Kubernetes 1.18+)
    ## This is supported in Kubernetes 1.18+ and required if you have more than one IngressClass marked as the default for your cluster.
    ## ref: https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/
    ##
    ingressClassName: ""
    ## @param apiIngress.hostname Default host for the ingress resource
    ##
    hostname: minio.local
    ## @param apiIngress.path The Path to MinIO&reg;. You may need to set this to '/*' in order to use this with ALB ingress controllers.
    ##
    path: /
    ## @param apiIngress.pathType Ingress path type
    ##
    pathType: ImplementationSpecific
    ## @param apiIngress.servicePort Service port to be used
    ## Default is http. Alternative is https.
    ##
    servicePort: minio-api
    ## @param apiIngress.annotations Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.
    ## For a full list of possible ingress annotations, please see
    ## ref: https://github.com/kubernetes/ingress-nginx/blob/main/docs/user-guide/nginx-configuration/annotations.md
    ## Use this parameter to set the required annotations for cert-manager, see
    ## ref: https://cert-manager.io/docs/usage/ingress/#supported-annotations
    ##
    ## e.g:
    ## annotations:
    ##   kubernetes.io/ingress.class: nginx
    ##   cert-manager.io/cluster-issuer: cluster-issuer-name
    ##
    annotations: {}
    ## @param apiIngress.tls Enable TLS configuration for the hostname defined at `apiIngress.hostname` parameter
    ## TLS certificates will be retrieved from a TLS secret with name: `{{- printf "%s-tls" .Values.apiIngress.hostname }}`
    ## You can:
    ##   - Use the `ingress.secrets` parameter to create this TLS secret
    ##   - Rely on cert-manager to create it by setting the corresponding annotations
    ##   - Rely on Helm to create self-signed certificates by setting `ingress.selfSigned=true`
    ##
    tls: false
    ## @param apiIngress.selfSigned Create a TLS secret for this ingress record using self-signed certificates generated by Helm
    ##
    selfSigned: false
    ## @param apiIngress.extraHosts The list of additional hostnames to be covered with this ingress record.
    ## Most likely the hostname above will be enough, but in the event more hosts are needed, this is an array
    ## e.g:
    ## extraHosts:
    ##   - name: minio.local
    ##     path: /
    ##
    extraHosts: []
    ## @param apiIngress.extraPaths Any additional paths that may need to be added to the ingress under the main host
    ## For example: The ALB ingress controller requires a special rule for handling SSL redirection.
    ## extraPaths:
    ## - path: /*
    ##   backend:
    ##     serviceName: ssl-redirect
    ##     servicePort: use-annotation
    ##
    extraPaths: []
    ## @param apiIngress.extraTls The tls configuration for additional hostnames to be covered with this ingress record.
    ## see: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
    ## e.g:
    ## extraTls:
    ## - hosts:
    ##     - minio.local
    ##   secretName: minio.local-tls
    ##
    extraTls: []
    ## @param apiIngress.secrets If you're providing your own certificates, please use this to add the certificates as secrets
    ## key and certificate are expected in PEM format
    ## name should line up with a secretName set further up
    ##
    ## If it is not set and you're using cert-manager, this is unneeded, as it will create a secret for you with valid certificates
    ## If it is not set and you're NOT using cert-manager either, self-signed certificates will be created valid for 365 days
    ## It is also possible to create and manage the certificates outside of this helm chart
    ## Please see README.md for more information
    ##
    ## Example
    ## secrets:
    ##   - name: minio.local-tls
    ##     key: ""
    ##     certificate: ""
    ##
    secrets: []
    ## @param apiIngress.extraRules Additional rules to be covered with this ingress record
    ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-rules
    ## e.g:
    ## extraRules:
    ## - host: example.local
    ##     http:
    ##       path: /
    ##       backend:
    ##         service:
    ##           name: example-svc
    ##           port:
    ##             name: http
    ##
    extraRules: []

  ## Enable persistence using Persistent Volume Claims
  ## ref: https://kubernetes.io/docs/concepts/storage/persistent-volumes/
  ##
  persistence:
    ## @param persistence.enabled Enable MinIO&reg; data persistence using PVC. If false, use emptyDir
    ##
    enabled: true
    ## @param persistence.storageClass PVC Storage Class for MinIO&reg; data volume
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    storageClass: "openebs-zfs"
    ## @param persistence.mountPath Data volume mount path
    ##
    mountPath: /bitnami/minio/data
    ## @param persistence.accessModes PVC Access Modes for MinIO&reg; data volume
    ##
    accessModes:
      - ReadWriteOnce
    ## @param persistence.size PVC Storage Request for MinIO&reg; data volume
    ##
    size: 800Gi
    ## @param persistence.annotations Annotations for the PVC
    ##
    annotations: {}
    ## @param persistence.existingClaim Name of an existing PVC to use (only in `standalone` mode)
    ##
    existingClaim: ""
  ## @section Volume Permissions parameters

  ## @section Metrics parameters
  metrics:
    ## @param metrics.prometheusAuthType Authentication mode for Prometheus (`jwt` or `public`)
    ## To allow public access without authentication for prometheus metrics set environment as follows.
    ##
    prometheusAuthType: public
    ## Prometheus Operator ServiceMonitor configuration
    ##
    serviceMonitor:
      ## @param metrics.serviceMonitor.enabled If the operator is installed in your cluster, set to true to create a Service Monitor Entry
      ##
      enabled: true
      ## @param metrics.serviceMonitor.namespace Namespace which Prometheus is running in
      ##
      namespace: ""
      ## @param metrics.serviceMonitor.labels Extra labels for the ServiceMonitor
      ##
      labels: {}
      ## @param metrics.serviceMonitor.jobLabel The name of the label on the target service to use as the job name in Prometheus
      ##
      jobLabel: ""
      ## DEPRECATED metrics.serviceMonitor.path - please use `metrics.serviceMonitor.paths` instead
      ##
      ## path: /minio/v2/metrics/cluster
      ## @param metrics.serviceMonitor.paths HTTP paths to scrape for metrics
      ##
      paths:
        - /minio/v2/metrics/cluster
        - /minio/v2/metrics/node
      ## @param metrics.serviceMonitor.interval Interval at which metrics should be scraped
      ##
      interval: 30s
      ## @param metrics.serviceMonitor.scrapeTimeout Specify the timeout after which the scrape is ended
      ## e.g:
      ## scrapeTimeout: 30s
      scrapeTimeout: ""
      ## @param metrics.serviceMonitor.metricRelabelings MetricRelabelConfigs to apply to samples before ingestion
      ##
      metricRelabelings: []
      ## @param metrics.serviceMonitor.relabelings Metrics relabelings to add to the scrape endpoint, applied before scraping
      ##
      relabelings: []
      ## @param metrics.serviceMonitor.honorLabels Specify honorLabels parameter to add the scrape endpoint
      ##
      honorLabels: false
      ## @param metrics.serviceMonitor.selector Prometheus instance selector labels
      ## ref: https://github.com/bitnami/charts/tree/main/bitnami/prometheus-operator#prometheus-configuration
      ##
      selector: {}
      ## @param metrics.serviceMonitor.apiVersion ApiVersion for the serviceMonitor Resource (defaults to "monitoring.coreos.com/v1")
      apiVersion: ""
      ## @param metrics.serviceMonitor.tlsConfig Additional TLS configuration for metrics endpoint with "https" scheme
      ## ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api.md#monitoring.coreos.com/v1.TLSConfig
      tlsConfig: {}
    ## Prometheus Operator PrometheusRule configuration
    ##
    prometheusRule:
      ## @param metrics.prometheusRule.enabled Create a Prometheus Operator PrometheusRule (also requires `metrics.enabled` to be `true` and `metrics.prometheusRule.rules`)
      ##
      enabled: true
      ## @param metrics.prometheusRule.namespace Namespace for the PrometheusRule Resource (defaults to the Release Namespace)
      ##
      namespace: ""
      ## @param metrics.prometheusRule.additionalLabels Additional labels that can be used so PrometheusRule will be discovered by Prometheus
      ##
      additionalLabels: {}
      ## @param metrics.prometheusRule.rules Prometheus Rule definitions
      # - alert: minio cluster nodes offline
      #   annotations:
      #     summary: "minio cluster nodes offline"
      #     description: "minio cluster nodes offline, pod {{`{{`}} $labels.pod {{`}}`}} service {{`{{`}} $labels.job {{`}}`}} offline"
      #   for: 10m
      #   expr: minio_cluster_nodes_offline_total > 0
      #   labels:
      #     severity: critical
      #     group: PaaS
      ##
      rules: []

