ingress-nginx:
  controller:
    ingressClass: nginx
    ingressClassResource:
      # -- Name of the ingressClass
      name: nginx
      # -- Is this ingressClass enabled or not
      enabled: true
      # -- Is this the default ingressClass for the cluster
      default: true
    hostNetwork: false
    kind: DaemonSet
    service:
      enabled: false
      type: NodePort
      #loadBalancerIP: "10.0.1.200"
      nodePorts:
        http: 32080
        https: 32443
        2222-tcp: 32222
        30100-tcp: 32100
    config:
      #log-format-upstream: '{"msec":"$msec","connection":"$connection","connection_requests":"$connection_requests","pid":"$pid","request_id":"$request_id","status":"$status","remote_addr":"$remote_addr","remote_port":"$remote_port","remote_user":"$remote_user","request_length":"$request_length","request_method":"$request_method","request":"$request","request_uri":"$request_uri","args":"$args","bytes_sent":"$bytes_sent","body_bytes_sent":"$body_bytes_sent","http_referer":"$http_referer","http_user_agent":"$http_user_agent","http_host":"$http_host","server_name":"$server_name","server_protocol":"$server_protocol","scheme":"$scheme","request_time":"$request_time","upstream_connect_time":"$upstream_connect_time","upstream_header_time":"$upstream_header_time","upstream_response_time":"$upstream_response_time","upstream_response_length":"$upstream_response_length","upstream":"$upstream_addr","upstream_cache_status":"$upstream_cache_status","ssl_protocol":"$ssl_protocol","ssl_cipher":"$ssl_cipher","pipe":"$pipe","http_x_forwarded_for":"$http_x_forwarded_for","geoip_country_code":"$geoip_country_code","time_local":"$time_local","time_iso8601":"$time_iso8601"}'
      #use-proxy-protocol: "true"
      #use-forwarded-headers: "true"
      #enable-real-ip: "true"
      #use-proxy-protocol: "true"
      #forwarded-for-header: proxy_protocol
      ssl-protocols: "TLSv1.3 TLSv1.2"
      proxy-body-size: "1000m"      
      client-body-buffer-size: "1000m"
      compute-full-forwarded-for: "true"
      allow-snippet-annotations: "true"
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
    extraArgs:
      default-ssl-certificate: "ingress-nginx/wildcard-tls"
#      tcp-services-configmap: ingress-nginx/tcp-services
    resources:
      requests:
        memory: 100Mi
        cpu: 100m
      limits:
        memory: 1000Mi
    admissionWebhooks:
      annotations: {}
      # ignore-check.kube-linter.io/no-read-only-rootfs: "This deployment needs write access to root filesystem".

      ## Additional annotations to the admission webhooks.
      ## These annotations will be added to the ValidatingWebhookConfiguration and
      ## the Jobs Spec of the admission webhooks.
      enabled: false
    ingressClassResource:
      # -- Name of the ingressClass
      name: nginx
      # -- Is this ingressClass enabled or not
      enabled: true
      # -- Is this the default ingressClass for the cluster
      default: true
  tcp:
    30100: "minecraft/minecraft-minecraft:25565"    
    2222: "forgejo/forgejo-app-ssh:22"
