external-dns:
  # Copyright Broadcom, Inc. All Rights Reserved.
  # SPDX-License-Identifier: APACHE-2.0

  ## @section Global parameters
  ## Global Docker image parameters
  ## Please, note that this will override the image parameters, including dependencies, configured to use the global value
  ## Current available global Docker image parameters: imageRegistry, imagePullSecrets and storageClass
  ##

  ## @param global.imageRegistry Global Docker image registry
  ## @param global.imagePullSecrets Global Docker registry secret names as an array
  ##
  global:
    imageRegistry: ""
    ## E.g.
    ## imagePullSecrets:
    ##   - myRegistryKeySecretName
    ##
    imagePullSecrets: []
  ## @section Common parameters
  ##

  extraEnvVars:
    - name: TARGET_URL
      valueFrom:
        secretKeyRef:
          name: external-dns-secrets
          key: endpoint


  extraArgs: 
    default-targets:
    - $(TARGET_URL)

  ## @section external-dns parameters
  ##

  ## @param provider DNS provider where the DNS records will be created.
  ## Available providers are:
  ## - akamai, alibabacloud, aws, azure, azure-private-dns, cloudflare, coredns, designate, digitalocean, google, hetzner, infoblox, linode, rfc2136, transip, oci
  ##
  provider: cloudflare
  ## @param initContainers Attach additional init containers to the pod (evaluated as a template)
  ##
  initContainers: []
  ## DNS-Pod services
  ## Ref: https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/
  ## @param dnsPolicy Specifies the DNS policy for the external-dns deployment
  ## DNS policies can be set on a per-Pod basis. Currently Kubernetes supports the following Pod-specific DNS policies.
  ## Available options: Default, ClusterFirst, ClusterFirstWithHostNet, None
  ## Ref: https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-s-dns-policy
  dnsPolicy: ""
  ## @param dnsConfig  allows users more control on the DNS settings for a Pod. Required if `dnsPolicy` is set to `None`
  ## The dnsConfig field is optional and it can work with any dnsPolicy settings.
  ## Ref: https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-dns-config
  ## E.g.
  ## dnsConfig:
  ##   nameservers:
  ##     - 192.0.2.1 # this is an example
  ##   searches:
  ##     - ns1.svc.cluster-domain.example
  ##     - my.dns.search.suffix
  ##   options:
  ##     - name: ndots
  ##       value: "2"
  ##     - name: edns0
  dnsConfig: {}
  ## @param sidecars Attach additional containers to the pod (evaluated as a template)
  ##
  sidecars: []
  ## Flags related to processing sources
  ## ref: https://github.com/kubernetes-sigs/external-dns/blob/master/pkg/apis/externaldns/types.go#L272
  ## @param namespace Limit sources of endpoints to a specific namespace (default: all namespaces)
  ##
  namespace: ""
  ## @param watchReleaseNamespace Watch only namespace used for the release
  ##
  watchReleaseNamespace: false
  ## @param fqdnTemplates Templated strings that are used to generate DNS names from sources that don't define a hostname themselves
  ##
  fqdnTemplates: []
  ## @param containerPorts.http HTTP Container port
  ##
  containerPorts:
    http: 7979
  ## @param combineFQDNAnnotation Combine FQDN template and annotations instead of overwriting
  ##
  combineFQDNAnnotation: false
  ## @param ignoreHostnameAnnotation Ignore hostname annotation when generating DNS names, valid only when fqdn-template is set
  ##
  ignoreHostnameAnnotation: false
  ## @param publishInternalServices Allow external-dns to publish DNS records for ClusterIP services
  ##
  publishInternalServices: false
  ## @param publishHostIP Allow external-dns to publish host-ip for headless services
  ##
  publishHostIP: false
  ## @param serviceTypeFilter The service types to take care about (default: all, options: ClusterIP, NodePort, LoadBalancer, ExternalName)
  ##
  serviceTypeFilter: []
  ## Chart Validation
  ##
  validation:
    ## @param validation.enabled Enable chart validation
    ##
    enabled: true
  ## Cloudflare configuration to be set via arguments/env. variables
  ##
  cloudflare:
    ## @param cloudflare.apiToken When using the Cloudflare provider, `CF_API_TOKEN` to set (optional)
    ##
    apiToken: ""
    ## @param cloudflare.apiKey When using the Cloudflare provider, `CF_API_KEY` to set (optional)
    ##
    apiKey: ""
    ## @param cloudflare.secretName When using the Cloudflare provider, it's the name of the secret containing cloudflare_api_token or cloudflare_api_key.
    ## This ignores cloudflare.apiToken, and cloudflare.apiKey
    ##
    secretName: "external-dns-secrets"
    ## @param cloudflare.email When using the Cloudflare provider, `CF_API_EMAIL` to set (optional). Needed when using CF_API_KEY
    ##
    email: ""
    ## @param cloudflare.proxied When using the Cloudflare provider, enable the proxy feature (DDOS protection, CDN...) (optional)
    ##
    proxied: false
    ## @param cloudflare.dnsRecordsPerPage Number of DNS records to fetch per page. (optional)
    ## When using the Cloudflare provider, specify how many DNS records listed per page, max possible 5,000 (default: 100)
    ##
    dnsRecordsPerPage: 100
  ## @param domainFilters Limit possible target zones by domain suffixes (optional)
  ##
  domainFilters: []
  ## @param excludeDomains Exclude subdomains (optional)
  ##
  excludeDomains: []
  ## @param regexDomainFilter Limit possible target zones by regex domain suffixes (optional)
  ## If regexDomainFilter is specified, domainFilters will be ignored
  ##
  regexDomainFilter: ""
  ## @param regexDomainExclusion Exclude subdomains by using regex pattern (optional)
  ## If regexDomainFilter is specified, excludeDomains will be ignored and external-dns will use regexDomainExclusion even though regexDomainExclusion is empty
  ##
  regexDomainExclusion: ""
  ## @param zoneNameFilters Filter target zones by zone domain (optional)
  ##
  zoneNameFilters: []
  ## @param zoneIdFilters Limit possible target zones by zone id (optional)
  ##
  zoneIdFilters: []
  ## @param annotationFilter Filter sources managed by external-dns via annotation using label selector (optional)
  ##
  annotationFilter: ""
  ## @param labelFilter Select sources managed by external-dns using label selector (optional)
  ##
  labelFilter: ""
  ## @param ingressClassFilters Filter sources managed by external-dns via IngressClass (optional)
  ##
  ingressClassFilters: []
  ## @param managedRecordTypesFilters Filter record types managed by external-dns (optional)
  ##
  managedRecordTypesFilters: []
  ## @param dryRun When enabled, prints DNS record changes rather than actually performing them (optional)
  ##
  dryRun: false
  ## @param triggerLoopOnEvent When enabled, triggers run loop on create/update/delete events in addition to regular interval (optional)
  ##
  triggerLoopOnEvent: false
  ## @param interval Interval update period to use
  ##
  interval: "1m"
  ## @param logLevel Verbosity of the logs (options: panic, debug, info, warning, error, fatal, trace)
  ##
  logLevel: info
  ## @param logFormat Which format to output logs in (options: text, json)
  ##
  logFormat: text

  ## Prometheus Exporter / Metrics
  ##
  metrics:
    ## @param metrics.enabled Enable prometheus to access external-dns metrics endpoint
    ##
    enabled: true
    ## @param metrics.podAnnotations Annotations for enabling prometheus to access the metrics endpoint
    ##
    podAnnotations: {}
    ## Prometheus Operator ServiceMonitor configuration
    ##
    serviceMonitor:
      ## @param metrics.serviceMonitor.enabled Create ServiceMonitor object
      ##
      enabled: true
      ## @param metrics.serviceMonitor.namespace Namespace in which Prometheus is running
      ##
      namespace: ""
      ## @param metrics.serviceMonitor.interval Interval at which metrics should be scraped
      ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
      ##
      interval: ""
      ## @param metrics.serviceMonitor.scrapeTimeout Timeout after which the scrape is ended
      ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
      ##
      scrapeTimeout: ""
      ## @param metrics.serviceMonitor.selector Additional labels for ServiceMonitor object
      ## ref: https://github.com/bitnami/charts/tree/main/bitnami/prometheus-operator#prometheus-configuration
      ## e.g:
      ## selector:
      ##   prometheus: my-prometheus
      ##
      selector: {}
      ## @param metrics.serviceMonitor.metricRelabelings Specify Metric Relabelings to add to the scrape endpoint
      ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#relabelconfig
      ##
      metricRelabelings: []
      ## @param metrics.serviceMonitor.relabelings [array] Prometheus relabeling rules
      ##
      relabelings: []
      ## @param metrics.serviceMonitor.honorLabels Specify honorLabels parameter to add the scrape endpoint
      ##
      honorLabels: false
      ## @param metrics.serviceMonitor.labels Used to pass Labels that are required by the installed Prometheus Operator
      ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#prometheusspec
      ##
      labels: {}
      ## @param metrics.serviceMonitor.targetLabels Labels from the Kubernetes service to be transferred to the created metrics
      targetLabels: []
      ## @param metrics.serviceMonitor.podTargetLabels Labels from the Kubernetes pod to be transferred to the created metrics
      podTargetLabels: []
      ## @param metrics.serviceMonitor.annotations Additional custom annotations for the ServiceMonitor
      ##
      annotations: {}
      ## @param metrics.serviceMonitor.jobLabel The name of the label on the target service to use as the job name in prometheus.
      ##
      jobLabel: ""
    