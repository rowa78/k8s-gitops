# yaml-language-server: $schema=values.schema.json
# Default values for cloudflared.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replica:
  # -- This will use DaemonSet to deploy cloudflared to all nodes
  allNodes: true
  # -- If previous flag disabled, this will use Deployment to deploy cloudflared only number of following count
  count: 1

terminationGracePeriodSeconds: 30

# -- This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  # -- The docker image repository to use
  repository: cloudflare/cloudflared
  # -- This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # -- Overrides the image tag whose default is the chart appVersion.
  tag: ""

updateStrategy:
  type: RollingUpdate
  rollingUpdate:
    maxUnavailable: 1

# -- This is for the secretes for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# -- This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# -- This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Automatically mount a ServiceAccount's API credentials?
  automount: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use. If not set and create is true, a name is generated using the fullname template
  name: ""

# -- This is for setting Kubernetes Annotations to a Pod. For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}

# -- This is for setting Kubernetes Labels to a Pod. For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

# -- This is for setting Security Context to a Pod. For more information checkout: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
podSecurityContext:
  fsGroup: 65532
  fsGroupChangePolicy: "OnRootMismatch"
  sysctls:
    - name: net.ipv4.ping_group_range
      value: "0 2147483647"

# -- This is for setting Security Context to a Container. For more information checkout: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
    add: []
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  privileged: false
  runAsUser: 65532
  runAsGroup: 65532

# -- This is for setting up the cloudflared tunnel secrets. For more information checkout: https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/do-more-with-tunnels/local-management/create-local-tunnel/
tunnelSecrets:
  # -- This is for cloudflared tunnel certificate PEM file.
  base64EncodedPemFile: ""
  # -- This is for cloudflared tunnel configuration JSON file.
  base64EncodedConfigJsonFile: ""
  # -- This is for setting up the existing secret for the cloudflared tunnel certificate PEM file. If not set, the base64EncodedPemFile will be used.
  existingPemFileSecret:
    # -- This is the name of the existing secret.
    name: ""
    # -- This is the key of the certificate PEM file in the existing secret.
    key: "cert.pem"
  # -- This is for setting up the existing secret for the cloudflared tunnel configuration JSON file. If not set, the base64EncodedConfigJsonFile will be used.
  existingConfigJsonFileSecret:
    # -- This is the name of the existing secret.
    name: ""
    # -- This is the key of the configuration JSON file in the existing secret.
    key: "credentials.json"

# -- Please find more configuration from https://developers.cloudflare.com/cloudflare-one/connections/connect-apps/configuration/arguments/
tunnelConfig:
  # -- cloudflared tunnel name
  name: ""
  metricsUpdateFrequency: 5s
  autoUpdateFrequency: 24h
  noAutoUpdate: true
  gracePeriod: 30s
  retries: 5
  # auto, http2, h2mux, quic
  protocol: auto
  # info, warn, error, fatal, panic
  logLevel: info
  transportLogLevel: warn
  connectTimeout: 30s
  warpRouting: false

# -- Cloudflare ingress rules. More information can be found here: https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/configure-tunnels/local-management/configuration-file/#how-traffic-is-matched
ingress:
  - hostname: example.com # or "*.example.com" but you must define a CNAME record for "*" to your DNS
    service: http://traefik.kube-system.svc.cluster.local:80

  - service: http_status:404

# -- This block is for setting up the resource management for the pod more information can be found here: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# -- For more information checkout: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector
nodeSelector:
  kubernetes.io/os: linux

# -- For more information checkout: https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/
tolerations:
  # Make sure cloudflared gets scheduled on all nodes.
  - effect: NoSchedule
    operator: Exists

# -- For more information checkout: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity
affinity: {}

